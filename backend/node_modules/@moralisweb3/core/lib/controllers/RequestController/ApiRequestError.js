"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMessageFromApiRequestError = exports.isApiRequestError = void 0;
var axios_1 = require("axios");
/**
 * Verify if the error is an AxiosError that is caused by a HTTP API error.
 */
var isApiRequestError = function (error) {
    // Check if the error is an axios error
    if (!(error instanceof axios_1.AxiosError)) {
        return false;
    }
    // Check if the error is a result of a 400 or 500 response
    if (error.code !== axios_1.AxiosError.ERR_BAD_REQUEST && error.code !== axios_1.AxiosError.ERR_BAD_RESPONSE) {
        return false;
    }
    return true;
};
exports.isApiRequestError = isApiRequestError;
/**
 * Extract the message from a ApiRequestError. Note that this is implemented based on how the Moralis APIs return Errors.
 * This can be in the form:
 * - { message: 'some message' }
 * - { message: ['some message', 'some other message'] }
 * - { }
 */
var getMessageFromApiRequestError = function (error) {
    var message = error.response.data.message;
    if (Array.isArray(message)) {
        return message.join(', ');
    }
    if (typeof message === 'string') {
        return message;
    }
    return 'Unknown error (no error info returned from API)';
};
exports.getMessageFromApiRequestError = getMessageFromApiRequestError;
//# sourceMappingURL=ApiRequestError.js.map